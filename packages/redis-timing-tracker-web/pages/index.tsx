import type { NextPage } from 'next'
import Head from 'next/head'
import dynamic from 'next/dynamic'
import { Box, Center, Container, Flex, Grid, GridItem, Heading } from '@chakra-ui/react'
import Card from '../components/Card'
import { ResponsiveContainer } from 'recharts'


const Chart = dynamic(() => import('../components/Chart'), { ssr: false })

type TimeSeriesEntry = {
    timestamp: number;
    value: number;
}

type Props = {
    fullTestData: TimeSeriesEntry[];
    latestRunInfo: { startedAt: number; duration: number; numberOfTests: number; } | null
};

const Home: NextPage<Props> = ({ fullTestData, latestRunInfo }) => {
    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <Center as={Flex} flexDirection="column" gap={5} marginTop={5}>
                    <Container maxW="container.lg" w="100%" as={Flex} flexDirection="column" gap={5} alignItems="center">
                        <Grid templateColumns="repeat(3, 1fr)" gap={4} width="100%">
                            <GridItem w="100%" >
                                <Card label="Last duration" value={latestRunInfo === null ? 'N/A' : `${latestRunInfo.duration}ms`} />
                            </GridItem>
                            <GridItem w="100%" gap={4}>
                                <Card label="Number of tests" value={latestRunInfo === null ? 'N/A' : latestRunInfo.numberOfTests} />
                            </GridItem>
                            <GridItem w="100%" gap={4}>
                                <Card label="Average time by test" value={latestRunInfo === null ? 'N/A' : `${latestRunInfo.duration / latestRunInfo.numberOfTests}ms`} />
                            </GridItem>
                        </Grid>
                        <Box h="100%" w="100%" borderWidth="1px" borderRadius="lg" padding={5} boxShadow="base">
                            <Heading as="h2">Full tests timing</Heading>
                            <ResponsiveContainer height={300}>
                                <Chart data={fullTestData} />
                            </ResponsiveContainer>
                        </Box>
                    </Container>
                </Center>
            </main>
        </div>
    )
}

export async function getStaticProps() {
    const testUrl = new URL('http://localhost:3000/api/testsNames')
    testUrl.searchParams.append('search', '')

    const fullTestResponse = await fetch('http://localhost:3000/api/test/full/timing');
    const fullTestData = await fullTestResponse.json();

    const latestRunResponse = await fetch('http://localhost:3000/api/test/full/latestRunInfo');
    const latestRunInfo = await latestRunResponse.json();

    return {
        props: {
            fullTestData,
            latestRunInfo,
        }
    }
}

export default Home
